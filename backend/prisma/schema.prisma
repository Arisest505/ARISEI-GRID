// üì¶ GENERADORES Y FUENTE DE DATOS

// prisma/schema.prisma

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")   // Pooler 6543 para runtime
  directUrl = env("DIRECT_URL")     // Directo 5432 SOLO migraciones
}


// üßë‚Äçüíº USUARIO Y ROLES

model Usuario {
  id                String    @id @default(uuid())
  nombre            String
  apellidos         String
  dni               String    @unique
  email             String    @unique
  telefono          String?
  usuario           String    @unique
  password_hash     String
  codigo_usuario    String    @unique
  imagen_perfil_url String?
  rol_id            String
  fecha_registro    DateTime  @default(now())
  activo            Boolean   @default(true)
  verificado_email  Boolean   @default(false)
  ultima_conexion   DateTime?

  rol              Rol                  @relation(fields: [rol_id], references: [id])
  suscripciones    SuscripcionUsuario[]
  pagos            Pago[]               @relation("PagosUsuario")
  pagos_recibidos  Pago[]               @relation("PagosRecibidos")
  personas_creadas PersonaIncidencia[]
  incidencias      Incidencia[]
  instituciones    Institucion[]
  activaciones     SuscripcionUsuario[] @relation("UsuarioActiva")
  familiares       Familiar[]
}

model Rol {
  id          String  @id @default(uuid())
  nombre      String  @unique
  descripcion String?

  usuarios Usuario[]
  accesos  RolModuloAcceso[]
}

// üí≥ PLANES Y SUSCRIPCIONES

model Plan {
  id             String  @id @default(uuid())
  nombre         String  @unique
  descripcion    String?
  precio         Decimal
  duracion_meses Int
  es_activo      Boolean @default(true)
 rol_asociado String // <-- opcional temporalmente

  suscripciones SuscripcionUsuario[]
}



model SuscripcionUsuario {
  id                           String    @id @default(uuid())
  usuario_id                   String
  plan_id                      String
  fecha_inicio                 DateTime  @default(now())
  fecha_fin                    DateTime
  estado                       String
  metodo_activacion            String
  activado_por_usuario_id      String?
  fecha_activacion             DateTime?
  es_renovable_automaticamente Boolean   @default(false)

  usuario                Usuario  @relation(fields: [usuario_id], references: [id])
  plan                   Plan     @relation(fields: [plan_id], references: [id])
  activado_por_usuario   Usuario? @relation("UsuarioActiva", fields: [activado_por_usuario_id], references: [id])
  pago                   Pago?
}

model Pago {
  id                       String              @id @default(uuid())
  usuario_id               String
  usuario                  Usuario             @relation("PagosUsuario", fields: [usuario_id], references: [id])
  codigo_usuario_ingresado String
  monto_pagado             Decimal
  moneda                   String              @default("PEN")
  fecha_pago               DateTime            @default(now())
  metodo_pago              String
  referencia_transaccion   String?             @unique
  estado_pago              String              // <--- aseg√∫rate de tener esto
  suscripcion_id           String?             @unique
  suscripcion              SuscripcionUsuario? @relation(fields: [suscripcion_id], references: [id])
  recibido_por_usuario_id  String?
  recibido_por_usuario     Usuario?            @relation("PagosRecibidos", fields: [recibido_por_usuario_id], references: [id])
  ip_origen                String?
  qr_usado_url             String?
  medio_verificado         Boolean             @default(false)
}


// üè´ INSTITUCIONES E INCIDENCIAS

model Institucion {
  id             String   @id @default(uuid())
  nombre         String
  ubicacion      String?
  codigo_modular String?  @unique
  tipo           String
  fecha_registro DateTime @default(now())
  activo         Boolean  @default(true)
  creado_por_id  String

  creador     Usuario      @relation(fields: [creado_por_id], references: [id])
  incidencias Incidencia[]
}

model PersonaIncidencia {
  id                    String    @id @default(uuid())
  nombre_completo       String
  dni                   String    @unique
  fecha_nacimiento      DateTime?
  genero                String?
  telefono              String?
  correo                String?
  imagen_url            String?
  notas_adicionales     String?
  creado_por_usuario_id String

  creador     Usuario                  @relation(fields: [creado_por_usuario_id], references: [id])
  incidencias Incidencia[]
  vinculos    VinculoFamiliarPersona[]
}

model Incidencia {
  id                     String   @id @default(uuid())
  persona_id             String
  institucion_id         String?
  creado_por_usuario_id  String
  titulo                 String
  descripcion            String
  tipo_incidencia        String
  monto_deuda            Decimal?
  fecha_incidencia       DateTime
  estado_incidencia      String
  confidencialidad_nivel String
  adjuntos_url           String?
  fecha_creacion         DateTime @default(now())
  fecha_actualizacion    DateTime @updatedAt

  persona     PersonaIncidencia @relation(fields: [persona_id], references: [id])
  institucion Institucion?      @relation(fields: [institucion_id], references: [id])
  creador     Usuario           @relation(fields: [creado_por_usuario_id], references: [id])
}

// üë™ FAMILIA Y V√çNCULOS

model Familiar {
  id         String                   @id @default(uuid())
  dni        String                   @unique
  nombre     String
  telefono   String?
  correo     String?
  usuario_id String?

  usuario  Usuario?                 @relation(fields: [usuario_id], references: [id])
  vinculos VinculoFamiliarPersona[]
}

model VinculoFamiliarPersona {
  id             String   @id @default(uuid())
  familiar_id    String
  persona_id     String
  tipo_vinculo   String
  fecha_creacion DateTime @default(now())

  familiar Familiar          @relation(fields: [familiar_id], references: [id])
  persona  PersonaIncidencia @relation(fields: [persona_id], references: [id])

  @@unique([familiar_id, persona_id])
}

// üß© MODULOS Y PERMISOS

model Modulo {
  id              String  @id @default(uuid())
  nombre          String
  path            String
  icono           String?
  orden_menu      Int?
  visible_en_menu Boolean @default(true)

  permisos PermisoModulo[]
}

model PermisoModulo {
  id        String @id @default(uuid())
  nombre    String
  modulo_id String

  modulo  Modulo            @relation(fields: [modulo_id], references: [id])
  accesos RolModuloAcceso[]
}

model RolModuloAcceso {
  rol_id            String
  permiso_modulo_id String
  acceso_otorgado   Boolean

  rol     Rol           @relation(fields: [rol_id], references: [id])
  permiso PermisoModulo @relation(fields: [permiso_modulo_id], references: [id])

  @@id([rol_id, permiso_modulo_id])
}
